{"version":3,"sources":["../src/index.ts","../src/components/Button/Button.tsx","../src/utils/cn.ts","../src/components/Button/Button.types.ts"],"sourcesContent":["// Export de tous les composants\nexport * from './components'\n\n// Export des utilitaires\nexport { cn } from './utils/cn'","import React, { forwardRef, useState, useCallback } from 'react'\nimport { Loader2 } from 'lucide-react'\nimport { cn } from '../../utils/cn'\nimport {\n  ButtonProps,\n  BUTTON_VARIANTS,\n  BUTTON_SIZES,\n  BUTTON_SHAPES,\n  BUTTON_ANIMATIONS,\n  IconPosition\n} from './Button.types'\n\n/**\n * Composant Button ultra-flexible et personnalisable\n * \n * Features:\n * - Multiple variants (primary, secondary, outline, glass, neon, etc.)\n * - Différentes tailles et formes\n * - Support des icônes (gauche, droite, seule)\n * - Animations et effets visuels\n * - Loading state avec spinner\n * - Effet ripple au clic\n * - Glassmorphism et effets neon\n * - Accessibilité complète\n * - TypeScript strict\n */\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(({\n  // Contenu\n  children,\n  \n  // Style de base\n  variant = 'primary',\n  size = 'md',\n  shape = 'default',\n  \n  // État\n  loading = false,\n  disabled = false,\n  \n  // Icônes\n  icon,\n  leftIcon,\n  rightIcon,\n  \n  // Animation\n  animation = 'scale',\n  animationDuration = '200ms',\n  \n  // Apparence avancée\n  glass = false,\n  glow = false,\n  shadow = true,\n  gradient,\n  \n  // Interaction\n  ripple = true,\n  \n  // Style personnalisé\n  className,\n  style,\n  \n  // Événements\n  onClick,\n  onHover,\n  onFocus,\n  onBlur,\n  \n  // Props HTML natives\n  type = 'button',\n  'aria-label': ariaLabel,\n  ...props\n}, ref) => {\n  // État local pour l'effet ripple\n  const [ripples, setRipples] = useState<Array<{ id: number; x: number; y: number }>>([])\n  \n  // Gestion de l'effet ripple\n  const createRipple = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n    if (!ripple || disabled || loading) return\n    \n    const button = event.currentTarget\n    const rect = button.getBoundingClientRect()\n    const size = Math.max(rect.width, rect.height)\n    const x = event.clientX - rect.left - size / 2\n    const y = event.clientY - rect.top - size / 2\n    \n    const newRipple = {\n      id: Date.now(),\n      x,\n      y\n    }\n    \n    setRipples(prev => [...prev, newRipple])\n    \n    // Nettoyer le ripple après l'animation\n    setTimeout(() => {\n      setRipples(prev => prev.filter(r => r.id !== newRipple.id))\n    }, 600)\n  }, [ripple, disabled, loading])\n  \n  // Gestion du clic\n  const handleClick = useCallback((event: React.MouseEvent<HTMLButtonElement>) => {\n    if (disabled || loading) return\n    \n    createRipple(event)\n    onClick?.(event)\n  }, [disabled, loading, onClick, createRipple])\n  \n  // Détermination de l'icône à afficher\n  const getIconConfig = () => {\n    if (loading) {\n      return {\n        icon: Loader2,\n        position: (icon?.position || (leftIcon ? 'left' : rightIcon ? 'right' : 'only')) as IconPosition,\n        className: 'animate-spin'\n      }\n    }\n    \n    if (icon) return icon\n    \n    if (leftIcon) {\n      return { icon: leftIcon, position: 'left' as IconPosition }\n    }\n    \n    if (rightIcon) {\n      return { icon: rightIcon, position: 'right' as IconPosition }\n    }\n    \n    return null\n  }\n  \n  const iconConfig = getIconConfig()\n  const isIconOnly = iconConfig?.position === 'only' || (!children && iconConfig)\n  \n  // Construction des classes CSS\n  const buttonClasses = cn(\n    // Classes de base\n    'relative inline-flex items-center justify-center',\n    'font-medium transition-all duration-200',\n    'focus:outline-none focus:ring-2 focus:ring-offset-2',\n    'disabled:opacity-50 disabled:cursor-not-allowed',\n    'select-none overflow-hidden',\n    \n    // Variant\n    glass ? 'glass' : BUTTON_VARIANTS[variant],\n    \n    // Taille\n    isIconOnly && size.startsWith('icon') \n      ? BUTTON_SIZES[size as keyof typeof BUTTON_SIZES]\n      : isIconOnly\n      ? BUTTON_SIZES[`icon-${size}` as keyof typeof BUTTON_SIZES] || BUTTON_SIZES['icon-md']\n      : BUTTON_SIZES[size],\n    \n    // Forme\n    BUTTON_SHAPES[shape],\n    \n    // Animation\n    !disabled && !loading && BUTTON_ANIMATIONS[animation],\n    \n    // Effets visuels\n    shadow && !glass && 'shadow-md hover:shadow-lg',\n    glow && 'shadow-glow',\n    \n    // Style disabled/loading\n    (disabled || loading) && 'cursor-not-allowed',\n    \n    className\n  )\n  \n  // Rendu de l'icône\n  const renderIcon = () => {\n    if (!iconConfig) return null\n    \n    const { icon: IconComponent, size: iconSize = 16, className: iconClassName } = iconConfig\n    \n    if (React.isValidElement(IconComponent)) {\n      return React.cloneElement(IconComponent as React.ReactElement, {\n        ...('className' in (IconComponent.props || {}) ? { className: cn('flex-shrink-0', iconClassName) } : {}),\n        ...('size' in (IconComponent.props || {}) ? { size: iconSize } : {})\n      })\n    }\n    \n    if (typeof IconComponent === 'function') {\n      const Icon = IconComponent as React.ComponentType<any>\n      return <Icon className={cn('flex-shrink-0', iconClassName)} size={iconSize} />\n    }\n    \n    return IconComponent\n  }\n  \n  // Contenu du bouton\n  const buttonContent = (\n    <>\n      {/* Icône gauche */}\n      {iconConfig?.position === 'left' && (\n        <span className={cn('mr-2', isIconOnly && 'mr-0')}>\n          {renderIcon()}\n        </span>\n      )}\n      \n      {/* Contenu textuel */}\n      {children && !isIconOnly && (\n        <span className=\"flex-1\">{children}</span>\n      )}\n      \n      {/* Icône seule */}\n      {isIconOnly && renderIcon()}\n      \n      {/* Icône droite */}\n      {iconConfig?.position === 'right' && (\n        <span className={cn('ml-2', isIconOnly && 'ml-0')}>\n          {renderIcon()}\n        </span>\n      )}\n      \n      {/* Effet ripple */}\n      {ripple && ripples.map(rippleItem => (\n        <span\n          key={rippleItem.id}\n          className=\"absolute pointer-events-none\"\n          style={{\n            left: rippleItem.x,\n            top: rippleItem.y,\n            width: '100px',\n            height: '100px',\n          }}\n        >\n          <span className=\"block w-full h-full bg-white/30 rounded-full animate-ping\" />\n        </span>\n      ))}\n      \n      {/* Effet shimmer pour l'animation shimmer */}\n      {animation === 'shimmer' && !disabled && !loading && (\n        <span className=\"absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/20 to-transparent animate-shimmer\" />\n      )}\n    </>\n  )\n  \n  return (\n    <button\n      ref={ref}\n      type={type}\n      className={buttonClasses}\n      disabled={disabled || loading}\n      aria-label={ariaLabel || (typeof children === 'string' ? children : undefined)}\n      aria-disabled={disabled || loading}\n      style={{\n        ...style,\n        animationDuration,\n        ...(gradient && {\n          background: gradient,\n        }),\n      }}\n      onClick={handleClick}\n      onMouseEnter={onHover}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      {...props}\n    >\n      {buttonContent}\n    </button>\n  )\n})\n\nButton.displayName = 'Button'","import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\n/**\n * Utilitaire pour combiner et fusionner les classes Tailwind CSS\n * Utilise clsx pour la logique conditionnelle et twMerge pour éviter les conflits\n * \n * @param inputs - Classes CSS à combiner\n * @returns String de classes CSS optimisées\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}","import { ButtonHTMLAttributes, ReactNode } from 'react'\nimport { LucideIcon } from 'lucide-react'\n\n// Variants de style du bouton\nexport type ButtonVariant = \n  | 'primary' \n  | 'secondary' \n  | 'outline' \n  | 'ghost' \n  | 'link' \n  | 'destructive'\n  | 'success'\n  | 'warning'\n  | 'glass'\n  | 'neon'\n  | 'gradient'\n\n// Tailles du bouton\nexport type ButtonSize = \n  | 'xs' \n  | 'sm' \n  | 'md' \n  | 'lg' \n  | 'xl'\n  | 'icon-sm'\n  | 'icon-md' \n  | 'icon-lg'\n\n// Formes du bouton\nexport type ButtonShape = \n  | 'default' \n  | 'rounded' \n  | 'pill' \n  | 'square' \n  | 'circle'\n\n// Animation du bouton\nexport type ButtonAnimation = \n  | 'none'\n  | 'bounce'\n  | 'pulse'\n  | 'scale'\n  | 'slide'\n  | 'glow'\n  | 'shimmer'\n\n// Position de l'icône\nexport type IconPosition = 'left' | 'right' | 'only'\n\n// Configuration de l'icône\nexport interface IconConfig {\n  icon: LucideIcon | ReactNode\n  position?: IconPosition\n  size?: number\n  className?: string\n}\n\n// Props du composant Button\nexport interface ButtonProps extends Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'size'> {\n  // Contenu\n  children?: ReactNode\n  \n  // Style\n  variant?: ButtonVariant\n  size?: ButtonSize\n  shape?: ButtonShape\n  \n  // État\n  loading?: boolean\n  disabled?: boolean\n  \n  // Icônes\n  icon?: IconConfig\n  leftIcon?: LucideIcon | ReactNode\n  rightIcon?: LucideIcon | ReactNode\n  \n  // Animation\n  animation?: ButtonAnimation\n  animationDuration?: string\n  \n  // Apparence avancée\n  glass?: boolean\n  glow?: boolean\n  shadow?: boolean\n  gradient?: string\n  \n  // Interaction\n  ripple?: boolean\n  haptic?: boolean\n  \n  // Accessibilité\n  'aria-label'?: string\n  tooltip?: string\n  \n  // Style personnalisé\n  className?: string\n  style?: React.CSSProperties\n  \n  // Événements\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void\n  onHover?: (event: React.MouseEvent<HTMLButtonElement>) => void\n  onFocus?: (event: React.FocusEvent<HTMLButtonElement>) => void\n  onBlur?: (event: React.FocusEvent<HTMLButtonElement>) => void\n}\n\n// Variantes de style prédéfinies\nexport const BUTTON_VARIANTS = {\n  primary: 'bg-nestor-600 text-white hover:bg-nestor-700 focus:ring-nestor-500',\n  secondary: 'bg-neutral-200 text-neutral-900 hover:bg-neutral-300 focus:ring-neutral-500',\n  outline: 'border-2 border-nestor-600 text-nestor-600 hover:bg-nestor-600 hover:text-white focus:ring-nestor-500',\n  ghost: 'text-nestor-600 hover:bg-nestor-50 focus:ring-nestor-500',\n  link: 'text-nestor-600 underline-offset-4 hover:underline focus:ring-nestor-500',\n  destructive: 'bg-error-600 text-white hover:bg-error-700 focus:ring-error-500',\n  success: 'bg-success-600 text-white hover:bg-success-700 focus:ring-success-500',\n  warning: 'bg-warning-600 text-white hover:bg-warning-700 focus:ring-warning-500',\n  glass: 'glass text-white border-white/20 hover:bg-white/20 focus:ring-white/50',\n  neon: 'bg-nestor-600 text-white hover:shadow-neon-hover focus:shadow-neon',\n  gradient: 'bg-gradient-to-r from-nestor-600 to-purple-600 text-white hover:from-nestor-700 hover:to-purple-700',\n} as const\n\n// Tailles prédéfinies\nexport const BUTTON_SIZES = {\n  xs: 'h-6 px-2 text-xs',\n  sm: 'h-8 px-3 text-sm',\n  md: 'h-10 px-4 text-sm',\n  lg: 'h-11 px-8 text-base',\n  xl: 'h-12 px-8 text-lg',\n  'icon-sm': 'h-8 w-8 p-0',\n  'icon-md': 'h-10 w-10 p-0',\n  'icon-lg': 'h-11 w-11 p-0',\n} as const\n\n// Formes prédéfinies\nexport const BUTTON_SHAPES = {\n  default: 'rounded-md',\n  rounded: 'rounded-lg',\n  pill: 'rounded-full',\n  square: 'rounded-none',\n  circle: 'rounded-full',\n} as const\n\n// Animations prédéfinies\nexport const BUTTON_ANIMATIONS = {\n  none: '',\n  bounce: 'hover:animate-bounce-subtle',\n  pulse: 'hover:animate-pulse-slow',\n  scale: 'hover:scale-105 active:scale-95',\n  slide: 'hover:translate-y-[-2px]',\n  glow: 'hover:animate-glow',\n  shimmer: 'relative overflow-hidden hover:animate-shimmer',\n} as const"],"mappings":"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","names":["size","React"]}